
@{
    ViewBag.Title = "Commande";
}

@section headerStyle {

    <link href="~/Content/jqx.base.css" rel="stylesheet" />
    <style type="text/css">
        .custlabel{
            text-align:left !important;
        }
    </style>
}

<div class="row">
    <div class="col-lg-4">
        @Html.Action("Cat", "Produit")
    </div>
    <div class="col-lg-5">
        <div class="row">
            @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                <div class="form-group">
                    <div class="col-md-5 pull-right">
                        <span>Stock:</span>&nbsp;&nbsp; <span data-bind="text:QteStock"></span>
                    </div>
                </div>
                
               <div data-bind="visible:statutVerre">
                        <div class="row">
                            <div class="form-group col-sm-6">
                                @Html.Label("Gamme verre")
                                @Html.DropDownList("Gammeverre", (SelectList)ViewBag.GammeVerre, "--Selectionnez un type de verre--", new { @class = "form-control" })
                            </div>
                            <div class="form-group col-sm-6">
                                @Html.Label("Marque")
                                @Html.DropDownList("Marque", (SelectList)ViewBag.Marque, "--Selectionnez la marque--", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-6">
                                @Html.Label("Puissance")
                                @Html.DropDownList("Puissance", (SelectList)ViewBag.Puissance, "--Selectionnez une puissance--", new { @class = "form-control" })
                            </div>
                            <div class="form-group col-sm-6">
                                @Html.Label("Angle")
                                @Html.DropDownList("Angle", (SelectList)ViewBag.Angle, "--Selectionnez un angle--", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-sm-2 pull-right"><button class="btn" type="button" onclick="$('#jqxTree').select();">OK</button></div>
                        </div>
                    </div>
                
                <div class="form-group">
                    @Html.Label("Ref Prod", new { @class = "col-md-3 control-label custlabel" })
                    <div class="col-md-8">
                        @Html.TextBox("refprod", null, new { @class = "form-control", @data_bind="value:refprod" })
                    </div> 
                </div>
                <div class="form-group">
                    @Html.Label("Quantite", new { @class = "col-md-3 control-label custlabel" })
                    <div class="col-md-8">
                        @Html.TextBox("qte", null, new { @class = "form-control", @data_bind = "value:qte" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Prix", new { @class = "col-md-3 control-label custlabel" })
                    <div class="col-md-8">
                        @Html.TextBox("prix", null, new { @class = "form-control", @data_bind = "value:prix" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Remise", new { @class = "col-md-3 control-label custlabel" })
                    <div class="col-md-5">
                        @Html.TextBox("rem", null, new { @class = "form-control", @data_bind = "value:rem, event:{blur:checkValue('rem')}" })
                    </div>
                    <div class="col-md-3">
                        <select class="form-control" id="rem" style="margin-left:-15px; width:90px;" data-bind="options:typeRem, value:remval, event:{change:checkValue('rem')}"></select>
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Remise DG", new { @class = "col-md-3 control-label custlabel" })
                    <div class="col-md-5">
                        @Html.TextBox("remdg", null, new { @class = "form-control", @data_bind = "value:remdg, event:{blur:checkValue('remdg')}" })
                    </div>
                    <div class="col-md-3">
                        <select data-bind="options:typeRemDg, value:remdgval, event:{change:checkValue('remdg')}" class="form-control" id="rem" style="margin-left:-15px; width:90px;"></select>
                    </div> 
                </div>
                <div class="form-group">
                    <div class="col-md-6  pull-right">
                        <button type="button" class="btn" data-bind="click:AddItem()">Ajouter</button>
                        <button type="reset" class="btn">Annuler</button>
                    </div>
                </div>
            }
        </div>

        <div class="row">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Ref.</th>
                        <th>Qte</th>
                        <th>P.U</th>
                        <th>M. Total</th>
                        <th>Rem</th>
                        <th>Rem DG</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody data-bind="foreach:ligneCommande">
                    <tr>
                        <td data-bind="text:RefProd"></td>
                        <td data-bind="text:Qte"></td>
                        <td data-bind="text:Prix"></td>
                        <td data-bind="text:MontantTotal"></td>
                        <td data-bind="text:rem"></td>
                        <td data-bind="text:remdg"></td>
                        <td data-bind="click:$root.RemoveItem"><span class="text-danger"><i class="glyphicon glyphicon-remove-circle"></i></span></td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="4">Montant Total:</td>
                        <td colspan="3" data-bind="text:mttTotal">0</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
    <div class="col-lg-3">
        <!--<div class="row">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Ref.</th>
                        <th>Qte</th>
                        <th>P.U</th>
                        <th>M. Total</th>
                        <th>Rem</th>
                        <th>Rem DG</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody data-bind="foreach:ligneCommande">
                    <tr>
                        <td data-bind="text:RefProd"></td>
                        <td data-bind="text:Qte"></td>
                        <td data-bind="text:Prix"></td>
                        <td data-bind="text:MontantTotal"></td>
                        <td data-bind="text:rem"></td>
                        <td data-bind="text:remdg"></td>
                        <td data-bind="click:$root.RemoveItem"><span class="text-danger"><i class="glyphicon glyphicon-remove-circle"></i></span></td>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="4">Montant Total:</td>
                        <td colspan="3" data-bind="text:mttTotal">0</td>
                    </tr>
                </tfoot>
            </table>
        </div>-->
        <div class="">
            <h4>Ref. Commande</h4>
            <hr />
            @using (Html.BeginForm())
            {
            <div class="form-group">
                @Html.Label("Type commande")
                <select class="form-control" name="TypeCmd" id="Type_commande">
                    <option value="null">--Selectionnez un type de commande--</option>
                    <option value="Provisoire">Provisoire</option>
                    <option value="Definitive">Definitive</option>
                </select>
            </div>
            <div class="form-group">
                @Html.Label("Date commande")
                <input  type="date" value="" class="form-control" id="dateCommande"/>
            </div>
            <div class="form-group">
                @Html.Label("Date livraison")
                <input  type="date" class="form-control" id="dateLivraison"/>
            </div>
            <div class="form-group">
                @Html.Label("Charge patient")
                @Html.TextBox("Charge patient", 0, new { @class = "form-control" })
            </div>
             <hr />
                <h4>Couverture assurance</h4>
            <div class="form-group">
                @Html.Label("Assurance")
                @Html.DropDownList("Assurance", (SelectList)ViewBag.Assurances, "--Selectionnez une assurance--", new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.Label("Montant assur")
                @Html.TextBox("Montant assur", 0, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <button type="button" class="btn" id="btn_valider">Valider</button>
                <a href="#" class="btn">Annuler</a>
            </div>
            }
        </div>
    </div>
</div>
 <!-- Script -->

@section scripts {
    <script src="~/Scripts/knockout-3.3.0.js"></script>
    <script src="~/Scripts/jqxcore.js"></script>
    <script src="~/Scripts/jqxdata.js"></script>
    <script src="~/Scripts/jqxknockout.js"></script>
    <script src="~/Scripts/jqxscrollbar.js"></script>
    <script src="~/Scripts/jqxlistbox.js"></script>
    <script src="~/Scripts/jqxexpander.js"></script>
    <script src="~/Scripts/jqxbuttons.js"></script>
    <script src="~/Scripts/jqxpanel.js"></script>
    <script src="~/Scripts/jqxtree.js"></script>

    <script type="text/javascript">
    var catProdTree = [];
    var monture = divers = verre = [];
    var _myCatArr = ["DIVERS", "MONTURE", "VERRE"];

    $(document).ready(function () {
        //var catArray = ["divers", "monture", "verre"];
        var urlQuery = "@Url.RouteUrl("_getListProductByCat", new { categorie = "categorie"})";
        for (var i = 0; i < 3; i++) {
            var _url = urlQuery.replace("categorie", _myCatArr[i].toLowerCase());
            $.ajax({
                url: _url,
                type: "GET",
                dataType: "json",
                success: function (d) {
                    var temp = [];
                    if (d.Produits.length > 0) {
                        $.each(d.Produits, function (index, val) {
                            temp.push({ Id: val.Id, Designation: val.Designation, Prix: val.Prix, QteStock: val.QteStock, Marque: val.Marque });
                        });
                        switch (d.LibCat) {
                            case "monture":
                                monture = temp;
                                break;
                            case "verre":
                                verre = temp;
                                break;
                            case "divers":
                                divers = temp;
                                break;
                        }
                        console.log(temp);
                    }
                },
                error: function () { }
            });
        }

        $.ajax({
               url:"@Url.RouteUrl("_listeProduitCat")",
                type: "GET",
                dataType: "json",
                success: function(d) {
                    if (d.length > 0) {
                        $.each(d, function (index, valeur) {
                            vm.catprod.push({ Categorie: valeur.Categorie, Produits: valeur.Produits });
                            $.each(valeur.Produits, function (x, val) {
                                $.each(val.MarqueProds, function (x1, val1) {
                                    catProdTree.push({ Id: val1.Id, RefProd: val1.RefProd, Prix: val1.Prix, Designation: val1.Designation, QteStock: val1.QteStock });
                                });
                            });
                        }); console.log(catProdTree);
                        $("#jqxTree").jqxTree({ height: 'auto'/*, width:245*/});
                    }
                },
                error: function() {}

            });
    });

     $("#jqxTree").on('select', function (e) {
         var args = e.args;
         var p0 = p1 = p2 = null;
         var p0val = p1val = p2val = null;
         vm.Id(0);
         vm.refprod(null);
         vm.QteStock(0);
         //
         var item = $('#jqxTree').jqxTree('getSelectedItem');
         if (item.parentElement != null) {
             //recuperer le parent 2
             var p2 = item.parentElement;
             var p2Item = $("#jqxTree").jqxTree('getItem', p2);
             p2val = p2Item.label;
         }

         if (p2 != null && p2Item.parentElement != null) {
             var p1 = p2Item.parentElement;
             var p1Item = $("#jqxTree").jqxTree('getItem', p1);
             p1val = p1Item.label;
         }

         if (p1 != null && p1Item.parentElement != null) {
             var p0 = p1Item.parentElement;
             var p0Item = $("#jqxTree").jqxTree('getItem', p0);
             p0val = p0Item.label;
         }

         if (p0val != null) {
             // cas des verres
             vm.statutVerre(true);
             var format = item.label.substring(0, 1);
             var nature = p1val.substring(0, 1);
             var type = p2val.substr(0, 1);
             var gamme = $("#Gammeverre").val();
             var puissance = $("#Puissance").val();
             var angle = $("#Angle").val();
             var marque = $("#Marque").val();
             var _designation = gamme + "(" + nature + type + format + "-[" + puissance + "]-" + angle + "°)";
             getElementValue(verre, _designation, marque);
         } else if (p1val != null) {
             // cas de monture ou produit divers
             vm.statutVerre(false);
             switch (p1val) {
                 case "DIVERS":
                     getElementValue(divers, item.label, p2val);
                     break;
                 case "MONTURE":
                     getElementValue(monture, item.label, p2val);
                     break;
             }
         }
         
     });

     function getElementValue(myarr, libelle, marque) {
         for (i = 0 ; i < myarr.length; i++) {
             if (myarr[i].Designation == libelle && myarr[i].Marque == marque)
             {
                 vm.Id(myarr[i].Id);
                 vm.prix(myarr[i].Prix);
                 vm.refprod(myarr[i].Designation);
                 vm.QteStock(myarr[i].QteStock);
                 console.log(vm.prix());
                 console.log(vm.refprod());
                 console.log(vm.QteStock());
                 break;
             }
         }
     }
     
     $("#btn_valider").click(function () {
         if (confirm("Voulez vous vraiment valider la commande?")) {
             var _url = "@Url.RouteUrl("_addPostCommande", new { id = "id"})";
             _url = _url.replace("id", "@ViewBag.ClientId");
             $.ajax({
                 url: _url,
                 type: "POST",
                 data: JSON.stringify({
                     DateCommande: $("#dateCommande").val(),
                     DateLvrCmd: $("#dateLivraison").val(),
                     MontantAssur: $("#Montant_assur").val(),
                     MontantClient: $("#Charge_patient").val(),
                     TypeCommande: $("#Type_commande").val(),
                     IdAssurance: $("#Assurance").val(),
                     LigneCommandes: vm.ligneCommande()
                 }),
                 contentType: "application/json; charset=utf-8",
                 dataType:"json",
                 success: function (d) {
                     //if (d.)
                 },
                 error: function() {}
             });
         } else {
             return false;
         }
     });
     var viewModel = function ()
        {
            var x = this;
            x.catprod = ko.observableArray([]);
            x.refprod = ko.observable();
            x.prix = ko.observable(0);
            x.QteStock = ko.observable(0);
            x.Id = ko.observable(0);
            x.rem = ko.observable(0);
            x.qte = ko.observable(0);
            x.remdg = ko.observable(0);
            x.mttTotal = ko.observable(0);
            x.ligneCommande = ko.observableArray([]);
            x.typeRem = ko.observableArray(["valeur", "%"]);
            x.typeRemDg = ko.observableArray(["valeur", "%"]);
            x.remval = ko.observable();
            x.remdgval = ko.observable();
            x.statutVerre = ko.observable(false);
            x.AddItem = function () {
                var idParse = parseInt(x.Id(), 10);
                if (idParse > 0 && parseInt(x.qte(), 10) > 0)
                {
                    if (x.ItemExiste(idParse)) {
                        if (confirm("Le produit existe deja!\n Voulez vous modifier l'ancienne valeur?")) {
                            x.RemoveItem(x.ligneCommande()[index]);
                        } else {
                            return false;
                        }
                    };
                    var valtmp = parseFloat(x.mttTotal(), 10);
                    var mttop = parseInt(x.qte(), 10) * parseFloat(x.prix(), 10);
                    var remop = x.getRemValue(mttop, parseFloat(x.rem(),10), x.remval());
                    var rempdg = x.getRemValue(mttop, parseFloat(x.remdg(), 10), x.remdgval());
                    var remtotal = remop + rempdg;
                    valtmp += (mttop - remtotal);
                    x.ligneCommande.push({ Id: x.Id(), RefProd: x.refprod(), Prix: x.prix(), Qte: x.qte(), MontantTotal: mttop, rem: remop, remdg: rempdg });
                    x.mttTotal(valtmp);
                }
            };
            
            x.getRemValue = function(m,r,t) {
                var temp = 0;
                switch (t) {
                    case '%':
                        if (r > 0)
                        {
                            temp = m * (r / 100); //m * (1 - (t / 100));
                        }
                        break;
                    case 'valeur':
                        if (r > 0) {
                            temp = r;
                        }
                        break;
                }
                return temp;
            };

            x.ItemExiste = function (eltId) {
                for (index = 0; index < x.ligneCommande().length; index++) {
                    if (x.ligneCommande()[index].Id == eltId)
                        return true;
                };
                return false;
            };

            x.checkValue = function (srcrem) {
                switch (srcrem) {
                    case "rem":
                        if (x.remval() == '%' && parseFloat(x.rem()) > 100) 
                        {
                            x.rem(0);
                        }
                        break;
                    case "remdg":
                        if (x.remdgval() == '%' && parseFloat(x.remdg()) > 100) 
                        {
                            x.remdg(0);
                        }
                        break;
                }
            };

            x.RemoveItem = function ($parent) {
                for (var i = 0; i < x.ligneCommande().length; i++) {
                    console.log(x.ligneCommande()[i].Id);
                    if ($parent.Id == x.ligneCommande()[i].Id) {
                        var remtotal = parseFloat($parent.rem, 10) + parseFloat($parent.remdg, 10);
                        var mtot = parseFloat(x.mttTotal(), 10) - (parseFloat($parent.MontantTotal, 10) - remtotal);
                        x.mttTotal(mtot);
                        x.ligneCommande.remove($parent);
                        break;
                    }
                }
            };
            x.selectItem = function ($parent) {
                //x.prix($parent.Prix);
                //alert(x.prix());
                //x.QteStock($parent.QteStock);
                //x.refprod($parent.RefProd);
            };
        };
        var vm = new viewModel();
        ko.applyBindings(vm);
    </script>
}